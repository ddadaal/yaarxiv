{
  "routes": {
    "LoginSchema": {
      "type": "object",
      "properties": {
        "querystring": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The login id, for example email"
            },
            "password": {
              "type": "string",
              "description": "The password"
            }
          },
          "required": [
            "id",
            "password"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The generated token"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the user"
                },
                "role": {
                  "$ref": "#/definitions/UserRole",
                  "description": "The role of the user."
                },
                "userId": {
                  "$ref": "#/definitions/UserId",
                  "description": "User id"
                }
              },
              "required": [
                "token",
                "name",
                "role",
                "userId"
              ],
              "additionalProperties": false,
              "description": "Logged in successfully. Returns user info."
            },
            "401": {
              "$ref": "#/definitions/ErrorResponse%3C%22CREDENTIAL_NOT_VALID%22%3E",
              "description": "Login failed. The username and password are not valid."
            },
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C(%22USER_NOT_VALIDATED_EMAIL_SENT%22%7C%22USER_NOT_VALIDATED_EMAIL_NOT_SENT%22)%3E",
              "description": "Login success, but the user is not validated.\n\nIf user's validation email has been timeout, and   System sends another validation email to the user Else   System will not send validation email"
            }
          },
          "required": [
            "200",
            "401",
            "403"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "querystring",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Login"
    },
    "ChangeArticleAdminSetPublicitySchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "articleId": {
              "$ref": "#/definitions/ArticleId",
              "description": "The id of the article."
            }
          },
          "required": [
            "articleId"
          ],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "properties": {
            "publicity": {
              "type": "boolean",
              "description": "Whether the article is public."
            }
          },
          "required": [
            "publicity"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "publicity": {
                  "type": "boolean",
                  "description": "The new publicity."
                }
              },
              "required": [
                "publicity"
              ],
              "additionalProperties": false,
              "description": "The publicity has been successfully changed. Returns the new publicity."
            },
            "404": {
              "$ref": "#/definitions/ArticleNotFoundResponse",
              "description": "The article is not found."
            }
          },
          "required": [
            "200",
            "404"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Change the owner set publicity of an article."
    },
    "AdminDeleteUserSchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "userId": {
              "$ref": "#/definitions/UserId",
              "description": "The ID of the user to be deleted."
            }
          },
          "required": [
            "userId"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "204": {
              "type": "null",
              "description": "The user and all related is deleted."
            },
            "404": {
              "$ref": "#/definitions/UserNotFoundResponse",
              "description": "The user is not found."
            }
          },
          "required": [
            "204",
            "404"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Delete a user and all of related articles. Only admin can do it."
    },
    "AdminGetArticlesSchema": {
      "type": "object",
      "properties": {
        "querystring": {
          "type": "object",
          "properties": {
            "searchWord": {
              "type": "string",
              "description": "The keyword to search"
            },
            "page": {
              "type": "number",
              "description": "The page number. 10 results per page.",
              "default": 1
            }
          },
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "articles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminGetArticlesResult"
                  },
                  "description": "Paginated articles."
                },
                "totalCount": {
                  "type": "number",
                  "description": "The total count of articles with specified search keyword."
                }
              },
              "required": [
                "articles",
                "totalCount"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "querystring",
        "responses"
      ],
      "additionalProperties": false
    },
    "AdminGetUsersSchema": {
      "type": "object",
      "properties": {
        "querystring": {
          "type": "object",
          "properties": {
            "searchWord": {
              "type": "string",
              "description": "Search word."
            },
            "page": {
              "type": "number",
              "description": "The page number of returned users.",
              "default": 1
            }
          },
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AdminGetUsersResult"
                  },
                  "description": "Paginated users."
                },
                "totalCount": {
                  "type": "number",
                  "description": "Total count of users."
                }
              },
              "required": [
                "users",
                "totalCount"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "querystring",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Get all users on the system."
    },
    "DeleteArticleSchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "articleId": {
              "$ref": "#/definitions/ArticleId",
              "description": "The ID of the article to be deleted."
            }
          },
          "required": [
            "articleId"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "204": {
              "type": "null",
              "description": "The article and all is deleted."
            },
            "404": {
              "$ref": "#/definitions/ArticleNotFoundResponse"
            }
          },
          "required": [
            "204",
            "404"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Delete an article and all of its revisions. Only the owner and admin can do it."
    },
    "GetArticleSchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "articleId": {
              "$ref": "#/definitions/ArticleId",
              "description": "Article ID."
            }
          },
          "required": [
            "articleId"
          ],
          "additionalProperties": false
        },
        "querystring": {
          "type": "object",
          "properties": {
            "revision": {
              "type": "number",
              "description": "Revision number. If not set, the latest revision will be returned."
            }
          },
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "article": {
                  "$ref": "#/definitions/Article",
                  "description": "The article information."
                }
              },
              "required": [
                "article"
              ],
              "additionalProperties": false,
              "description": "Returns the latest revision of an article."
            },
            "404": {
              "$ref": "#/definitions/ErrorResponse%3C(%22ARTICLE_NOT_FOUND%22%7C%22REVISION_NOT_FOUND%22)%3E",
              "description": "The article or specified revision is not found."
            }
          },
          "required": [
            "200",
            "404"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "querystring",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Get the full information of an article."
    },
    "GetArticleFileSchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "articleId": {
              "$ref": "#/definitions/ArticleId",
              "description": "The article id"
            }
          },
          "required": [
            "articleId"
          ],
          "additionalProperties": false
        },
        "querystring": {
          "type": "object",
          "properties": {
            "revision": {
              "type": "number",
              "description": "The number of revision. If not set, return the latest revision"
            }
          },
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {},
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C%22ARTICLE_RETRACTED%22%3E",
              "description": "The article has been retracted"
            },
            "404": {
              "$ref": "#/definitions/ErrorResponse%3C(%22ARTICLE_NOT_FOUND%22%7C%22REVISION_NOT_FOUND%22)%3E"
            }
          },
          "required": [
            "200",
            "403",
            "404"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "querystring",
        "responses"
      ],
      "additionalProperties": false,
      "description": "200 responses has a header x-yaarxiv-filetype Possble values are ALLOWED_SCRIPT_FORMAT"
    },
    "RetractArticleSchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "articleId": {
              "$ref": "#/definitions/ArticleId",
              "description": "The ID of the article to be deleted."
            }
          },
          "required": [
            "articleId"
          ],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "204": {
              "type": "null",
              "description": "The article has been retracted"
            },
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C(%22ARTICLE_RETRACTED%22%7C%22NOT_AUTHOR_OR_ADMIN%22)%3E",
              "description": "retracted: the article has already been retracted noAccess: only the author and admin can retract the article"
            },
            "404": {
              "$ref": "#/definitions/ArticleNotFoundResponse",
              "description": "The article is not found."
            }
          },
          "required": [
            "204",
            "404",
            "403"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Delete an article and all of its revisions. Only the owner and admin can do it."
    },
    "SearchArticleSchema": {
      "type": "object",
      "properties": {
        "querystring": {
          "type": "object",
          "properties": {
            "searchText": {
              "type": "string",
              "description": "The search text"
            },
            "startYear": {
              "type": "number",
              "description": "The start year limit."
            },
            "endYear": {
              "type": "number",
              "description": "The end year limit."
            },
            "authorNames": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "The name of authors Search articles with ALL of specified authors. Keyword can NOT be incomplete. For example, for keywords [\"Author1\", \"Author2\"]:    [\"Author1\", \"Author2\", \"Author3\"] Yes    [\"Author1\"] No    [\"Author\", \"Author2\"] No"
            },
            "keywords": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Keywords. Search articles with ALL of specified keywords. Keyword can be incomplete. For example, for keywords [\"Computer\", \"Biology\"]:    [\"Computer\", \"Biology\", \"Chemistry\"] Yes    [\"Computer Science\", \"Biology\", \"Cheistry\"] Yes    [\"Computer Science\", \"Physics\"] No    [\"Computer\", \"Physics\"] No"
            },
            "page": {
              "type": "number",
              "description": "The page number. 10 results per page.",
              "default": 1
            }
          },
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ArticleSearchResult"
                  },
                  "description": "The paginated results"
                },
                "totalCount": {
                  "type": "number",
                  "description": "The total count of results."
                }
              },
              "required": [
                "results",
                "totalCount"
              ],
              "additionalProperties": false,
              "description": "The search is successful."
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "querystring",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Search article with optional parameters."
    },
    "UpdateArticleSchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "articleId": {
              "$ref": "#/definitions/ArticleId",
              "description": "The original articleId."
            }
          },
          "required": [
            "articleId"
          ],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cnTitle": {
              "type": "string",
              "description": "Chinese Title",
              "maxLength": 100
            },
            "cnKeywords": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Chinese Keywords"
            },
            "enTitle": {
              "type": "string",
              "description": "English Title",
              "maxLength": 100
            },
            "enKeywords": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Chinese Keywords"
            },
            "authors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Author"
              },
              "description": "The authors of the article."
            },
            "abstract": {
              "type": "string",
              "description": "The abstract."
            },
            "codeLink": {
              "type": "string",
              "description": "Link to code. Should pass validation from utils/codeLink.ts",
              "format": "uri"
            },
            "doi": {
              "type": "string",
              "description": "DOI number"
            },
            "pdfToken": {
              "type": "number",
              "description": "The file token generated by uploading the PDF file."
            }
          },
          "required": [
            "abstract",
            "authors"
          ]
        },
        "responses": {
          "type": "object",
          "properties": {
            "201": {
              "type": "object",
              "properties": {
                "revisionNumber": {
                  "type": "number",
                  "description": "The new revision number."
                }
              },
              "required": [
                "revisionNumber"
              ],
              "additionalProperties": false,
              "description": "The update is successful."
            },
            "400": {
              "$ref": "#/definitions/ErrorResponse%3C(%22ARTICLEINFO_I18N_CONSTRAINTS%22%7C%22CODE_LINK_INVALID%22%7C%22FILE_TOKEN_INVALID%22)%3E"
            },
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C(%22NOT_AUTHOR%22%7C%22ARTICLE_RETRACTED%22)%3E",
              "description": "notAuthor: Not the author of the article retracted: the article has been retracted."
            },
            "404": {
              "$ref": "#/definitions/ArticleNotFoundResponse",
              "description": "The article is not found."
            }
          },
          "required": [
            "201",
            "400",
            "403",
            "404"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "body",
        "responses"
      ],
      "additionalProperties": false
    },
    "UploadArticleSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "cnTitle": {
              "type": "string",
              "description": "Chinese Title",
              "maxLength": 100
            },
            "cnKeywords": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Chinese Keywords"
            },
            "enTitle": {
              "type": "string",
              "description": "English Title",
              "maxLength": 100
            },
            "enKeywords": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Chinese Keywords"
            },
            "authors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Author"
              },
              "description": "The authors of the article."
            },
            "abstract": {
              "type": "string",
              "description": "The abstract."
            },
            "codeLink": {
              "type": "string",
              "description": "Link to code. Should pass validation from utils/codeLink.ts",
              "format": "uri"
            },
            "doi": {
              "type": "string",
              "description": "DOI number"
            },
            "pdfToken": {
              "type": "number",
              "description": "The file token generated by uploading the PDF file."
            }
          },
          "required": [
            "abstract",
            "authors",
            "pdfToken"
          ]
        },
        "responses": {
          "type": "object",
          "properties": {
            "201": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "The id of the new article."
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false,
              "description": "The upload is successful."
            },
            "400": {
              "$ref": "#/definitions/ErrorResponse%3C(%22ARTICLEINFO_I18N_CONSTRAINTS%22%7C%22CODE_LINK_INVALID%22%7C%22FILE_TOKEN_INVALID%22)%3E"
            }
          },
          "required": [
            "201",
            "400"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Upload an new article into the platform."
    },
    "UploadScriptSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "file": {
              "$ref": "#/definitions/File",
              "description": "The file object. 1 PDF per request."
            }
          },
          "required": [
            "file"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "201": {
              "type": "object",
              "properties": {
                "token": {
                  "$ref": "#/definitions/UploadedFileId",
                  "description": "The token for the upload. It is used to upload the following content of the article."
                }
              },
              "required": [
                "token"
              ],
              "additionalProperties": false,
              "description": "The upload is successful."
            },
            "400": {
              "$ref": "#/definitions/ErrorResponse%3C%22SCRIPT_FORMAT_ERROR%22%3E"
            }
          },
          "required": [
            "201",
            "400"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Upload a script into the platform. Expect Content-Type to be multipart/form-data. Only accepts txt, pdf, docx, doc"
    },
    "RequestPasswordResetSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "Account email."
            }
          },
          "required": [
            "email"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "201": {
              "type": "null",
              "description": "Email reset mail has been sent."
            },
            "404": {
              "$ref": "#/definitions/UserNotFoundResponse",
              "description": "User does not exist."
            }
          },
          "required": [
            "201",
            "404"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Request to reset a password."
    },
    "ResetPasswordSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "The reset password request token."
            },
            "newPassword": {
              "type": "string",
              "description": "New password"
            }
          },
          "required": [
            "token",
            "newPassword"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "201": {
              "type": "null",
              "description": "Password is reset."
            },
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C%22TOKEN_NOT_VALID%22%3E",
              "description": "The reset password token is invalid."
            }
          },
          "required": [
            "201",
            "403"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Reset password with a password reset token."
    },
    "ValidatePasswordResetTokenSchema": {
      "type": "object",
      "properties": {
        "querystring": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "The token of password reset."
            }
          },
          "required": [
            "token"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "valid": {
                  "type": "boolean",
                  "description": "Whether the token is valid."
                }
              },
              "required": [
                "valid"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "querystring",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Validate a token (a link) for password reset."
    },
    "ChangeAccountInfoSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "New name"
            }
          },
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "204": {
              "type": "null",
              "description": "The profile has been updated."
            }
          },
          "required": [
            "204"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Change the account info of the current logged in user."
    },
    "ChangeArticleOwnerSetPublicitySchema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "articleId": {
              "$ref": "#/definitions/ArticleId",
              "description": "The id of the article."
            }
          },
          "required": [
            "articleId"
          ],
          "additionalProperties": false
        },
        "body": {
          "type": "object",
          "properties": {
            "publicity": {
              "type": "boolean",
              "description": "Whether the article is public."
            }
          },
          "required": [
            "publicity"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "publicity": {
                  "type": "boolean",
                  "description": "The new publicity."
                }
              },
              "required": [
                "publicity"
              ],
              "additionalProperties": false,
              "description": "The publicity has been successfully changed. Returns the new publicity."
            },
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C%22NOT_OWNER%22%3E",
              "description": "Only the owner can change the owner set publicity of an article."
            },
            "404": {
              "$ref": "#/definitions/ArticleNotFoundResponse",
              "description": "The article is not found."
            }
          },
          "required": [
            "200",
            "404",
            "403"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "path",
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Change the owner set publicity of an article."
    },
    "ChangePasswordSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "current": {
              "type": "string",
              "description": "Current password."
            },
            "changed": {
              "type": "string",
              "description": "The new password."
            }
          },
          "required": [
            "current",
            "changed"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "204": {
              "type": "null",
              "description": "The password has been changed."
            },
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C%22BAD_CURRENT_PASSWORD%22%3E",
              "description": "The current password is not correct."
            }
          },
          "required": [
            "204",
            "403"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Change the password of the current logged in user."
    },
    "ChangeProfileSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "profileChange": {
              "$ref": "#/definitions/Partial%3CProfile%3E"
            }
          },
          "required": [
            "profileChange"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "204": {
              "type": "null",
              "description": "The profile has been updated."
            }
          },
          "required": [
            "204"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Change the profile of the current logged in user."
    },
    "GetAccountInfoSchema": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the user."
                },
                "email": {
                  "type": "string",
                  "description": "The email of the user."
                },
                "userId": {
                  "$ref": "#/definitions/UserId",
                  "description": "The id of the user."
                }
              },
              "required": [
                "name",
                "email",
                "userId"
              ],
              "additionalProperties": false,
              "description": "Returns the profile of current logged in user."
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "responses"
      ],
      "additionalProperties": false,
      "description": "Get the profile of current logged in user."
    },
    "UserGetArticleInfoSchema": {
      "type": "object",
      "properties": {
        "querystring": {
          "type": "object",
          "properties": {
            "page": {
              "type": "number",
              "description": "The page number. 10 results per page.",
              "default": 1
            }
          },
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "articles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardArticleInfo"
                  },
                  "description": "The articles the user has."
                },
                "totalCount": {
                  "type": "number",
                  "description": "The total count of articles."
                }
              },
              "required": [
                "articles",
                "totalCount"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "querystring",
        "responses"
      ],
      "additionalProperties": false
    },
    "GetProfileSchema": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "$ref": "#/definitions/Profile",
              "description": "Returns the profile of current logged in user."
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "responses"
      ],
      "additionalProperties": false,
      "description": "Get the profile of current logged in user."
    },
    "RegisterSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "The email. Requires to be an edu email.",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "The password"
            }
          },
          "required": [
            "email",
            "password"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "201": {
              "type": "object",
              "additionalProperties": false,
              "description": "Register completed."
            },
            "405": {
              "$ref": "#/definitions/ErrorResponse%3C%22EMAIL_ALREADY_EXISTS%22%3E",
              "description": "The email already exists."
            }
          },
          "required": [
            "201",
            "405"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Register"
    },
    "ValidateEmailSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string"
            }
          },
          "required": [
            "token"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "201": {
              "type": "object",
              "additionalProperties": false,
              "description": "Email has been validated."
            },
            "403": {
              "$ref": "#/definitions/ErrorResponse%3C%22TOKEN_NOT_VALID%22%3E",
              "description": "Token is not valid."
            }
          },
          "required": [
            "201",
            "403"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Validate a email with a token."
    },
    "QueryIfSetupSchema": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "object",
          "properties": {
            "200": {
              "type": "object",
              "properties": {
                "setup": {
                  "type": "boolean",
                  "description": "Has the system been setup/"
                }
              },
              "required": [
                "setup"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "200"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "responses"
      ],
      "additionalProperties": false
    },
    "SetupSchema": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "admin": {
              "$ref": "#/definitions/NewAdminInfo"
            }
          },
          "required": [
            "admin"
          ],
          "additionalProperties": false
        },
        "responses": {
          "type": "object",
          "properties": {
            "204": {
              "type": "null"
            },
            "409": {
              "$ref": "#/definitions/ErrorResponse%3C%22SYSTEM_ALREADY_SETUP%22%3E",
              "description": "The system has been setup."
            }
          },
          "required": [
            "204",
            "409"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "body",
        "responses"
      ],
      "additionalProperties": false,
      "description": "Setup the system."
    }
  },
  "models": {
    "UserId": {
      "type": "number"
    },
    "UserRole": {
      "type": "string",
      "enum": [
        "User",
        "Admin"
      ]
    },
    "ErrorResponse%3C%22CREDENTIAL_NOT_VALID%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "CREDENTIAL_NOT_VALID"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C(%22USER_NOT_VALIDATED_EMAIL_SENT%22%7C%22USER_NOT_VALIDATED_EMAIL_NOT_SENT%22)%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "USER_NOT_VALIDATED_EMAIL_SENT",
            "USER_NOT_VALIDATED_EMAIL_NOT_SENT"
          ]
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "UploadedFileId": {
      "type": "number"
    },
    "Author": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of author."
        },
        "affiliation": {
          "type": "string",
          "description": "The affiliation of the author"
        },
        "correspondingAuthor": {
          "type": "boolean",
          "description": "Is the author corresponding author?"
        }
      },
      "required": [
        "name",
        "affiliation",
        "correspondingAuthor"
      ],
      "additionalProperties": false,
      "description": "The author information."
    },
    "ArticleInfoI18nPart": {
      "type": "object",
      "properties": {
        "cnTitle": {
          "type": "string",
          "description": "Chinese Title",
          "maxLength": 100
        },
        "cnKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        },
        "enTitle": {
          "type": "string",
          "description": "English Title",
          "maxLength": 100
        },
        "enKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        }
      },
      "additionalProperties": false
    },
    "ArticleInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cnTitle": {
          "type": "string",
          "description": "Chinese Title",
          "maxLength": 100
        },
        "cnKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        },
        "enTitle": {
          "type": "string",
          "description": "English Title",
          "maxLength": 100
        },
        "enKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        },
        "authors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Author"
          },
          "description": "The authors of the article."
        },
        "abstract": {
          "type": "string",
          "description": "The abstract."
        },
        "codeLink": {
          "type": "string",
          "description": "Link to code. Should pass validation from utils/codeLink.ts",
          "format": "uri"
        },
        "doi": {
          "type": "string",
          "description": "DOI number"
        }
      },
      "required": [
        "abstract",
        "authors"
      ]
    },
    "ArticleRevision": {
      "type": "object",
      "properties": {
        "number": {
          "type": "number",
          "description": "The number of the revision starting from 1."
        },
        "time": {
          "type": "string",
          "description": "Upload time. Must be a valid ISO string with timezone."
        }
      },
      "required": [
        "number",
        "time"
      ],
      "additionalProperties": false
    },
    "ArticleId": {
      "type": "number"
    },
    "Article": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ArticleId",
          "description": "The id of the article."
        },
        "revisionNumber": {
          "type": "number",
          "description": "Current revision number. Must be a integer."
        },
        "currentRevision": {
          "$ref": "#/definitions/ArticleInfo",
          "description": "The current revision."
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArticleRevision"
          },
          "description": "All revisions"
        },
        "ownerId": {
          "$ref": "#/definitions/UserId",
          "description": "Owner User Id"
        },
        "createTime": {
          "type": "string",
          "description": "The time when the article is first uploaded to the platform. Must be a valid datetime string.",
          "format": "date-time"
        },
        "retractTime": {
          "type": "string",
          "description": "the time the article is retracted, if retracted",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "revisionNumber",
        "currentRevision",
        "revisions",
        "ownerId",
        "createTime"
      ],
      "additionalProperties": false,
      "description": "The full article info."
    },
    "ArticleComment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The comment id."
        },
        "articleId": {
          "type": "string",
          "description": "The article id."
        },
        "revisionNumber": {
          "type": "number",
          "description": "Revision the comment is targeting. If undefined, the comment is targeting the article itself."
        },
        "userId": {
          "type": "string",
          "description": "User"
        },
        "createTime": {
          "type": "string",
          "description": "The time the comment is first created."
        },
        "lastUpdatedTime": {
          "type": "string",
          "description": "The time the comment is last updated."
        },
        "content": {
          "type": "string",
          "description": "Content"
        }
      },
      "required": [
        "id",
        "articleId",
        "userId",
        "createTime",
        "lastUpdatedTime",
        "content"
      ],
      "additionalProperties": false,
      "description": "The comment to an article."
    },
    "NamedParameters%3Ctypeof%20validateArticleInfoI18nConstraints%3E": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/ArticleInfoI18nPart"
        }
      },
      "required": [
        "info"
      ],
      "additionalProperties": false
    },
    "ArticleNotFoundResponse": {
      "$ref": "#/definitions/ErrorResponse%3C%22ARTICLE_NOT_FOUND%22%3E"
    },
    "ErrorResponse%3C%22ARTICLE_NOT_FOUND%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "ARTICLE_NOT_FOUND"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "UserNotFoundResponse": {
      "$ref": "#/definitions/ErrorResponse%3C%22USER_NOT_FOUND%22%3E"
    },
    "ErrorResponse%3C%22USER_NOT_FOUND%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "USER_NOT_FOUND"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "AdminGetArticlesResult": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/ArticleId",
          "description": "The article id."
        },
        "owner": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/definitions/UserId",
              "description": "The owner id."
            },
            "name": {
              "type": "string",
              "description": "The owner name."
            }
          },
          "required": [
            "id",
            "name"
          ],
          "additionalProperties": false,
          "description": "Thw article owner."
        },
        "createTime": {
          "type": "string",
          "description": "The time the article is first created."
        },
        "lastUpdatedTime": {
          "type": "string",
          "description": "Last updated time"
        },
        "revisionCount": {
          "type": "number",
          "description": "The number of revisions this article has."
        },
        "ownerSetPublicity": {
          "type": "boolean",
          "description": "Whether the article is public set by the author."
        },
        "adminSetPublicity": {
          "type": "boolean",
          "description": "Whether the article is public set by admin."
        },
        "cnTitle": {
          "type": "string",
          "description": "Chinese Title",
          "maxLength": 100
        },
        "enTitle": {
          "type": "string",
          "description": "English Title",
          "maxLength": 100
        }
      },
      "required": [
        "id",
        "owner",
        "createTime",
        "lastUpdatedTime",
        "revisionCount",
        "ownerSetPublicity",
        "adminSetPublicity"
      ],
      "additionalProperties": false
    },
    "AdminGetUsersResult": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/UserId",
          "description": "The user id."
        },
        "name": {
          "type": "string",
          "description": "The name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email of the user."
        },
        "role": {
          "$ref": "#/definitions/UserRole",
          "description": "User role."
        },
        "articleCount": {
          "type": "number",
          "description": "How many articles this user has uploaded."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "role",
        "articleCount"
      ],
      "additionalProperties": false
    },
    "ErrorResponse%3C(%22ARTICLE_NOT_FOUND%22%7C%22REVISION_NOT_FOUND%22)%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ARTICLE_NOT_FOUND",
            "REVISION_NOT_FOUND"
          ]
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C%22ARTICLE_RETRACTED%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "ARTICLE_RETRACTED"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C(%22ARTICLE_RETRACTED%22%7C%22NOT_AUTHOR_OR_ADMIN%22)%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ARTICLE_RETRACTED",
            "NOT_AUTHOR_OR_ADMIN"
          ]
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ArticleSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "articleId": {
          "$ref": "#/definitions/ArticleId",
          "description": "The id of the article."
        },
        "commentCount": {
          "type": "number",
          "description": "The number of comments the article has."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the article is first uploaded to the platform. Must be a valid datetime string."
        },
        "lastUpdateTime": {
          "type": "string",
          "description": "The time when the article is last updated. Must be a valid datetime string."
        },
        "retractTime": {
          "type": "string",
          "description": "the time the article is retracted, if retracted",
          "format": "date-time"
        },
        "cnTitle": {
          "type": "string",
          "description": "Chinese Title",
          "maxLength": 100
        },
        "cnKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        },
        "enTitle": {
          "type": "string",
          "description": "English Title",
          "maxLength": 100
        },
        "enKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        },
        "authors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Author"
          },
          "description": "The authors of the article."
        },
        "abstract": {
          "type": "string",
          "description": "The abstract."
        },
        "codeLink": {
          "type": "string",
          "description": "Link to code. Should pass validation from utils/codeLink.ts",
          "format": "uri"
        },
        "doi": {
          "type": "string",
          "description": "DOI number"
        }
      },
      "required": [
        "abstract",
        "articleId",
        "authors",
        "commentCount",
        "createTime",
        "lastUpdateTime"
      ],
      "description": "A preview information of the article."
    },
    "ErrorResponse%3C(%22ARTICLEINFO_I18N_CONSTRAINTS%22%7C%22CODE_LINK_INVALID%22%7C%22FILE_TOKEN_INVALID%22)%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ARTICLEINFO_I18N_CONSTRAINTS",
            "CODE_LINK_INVALID",
            "FILE_TOKEN_INVALID"
          ]
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C(%22NOT_AUTHOR%22%7C%22ARTICLE_RETRACTED%22)%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "NOT_AUTHOR",
            "ARTICLE_RETRACTED"
          ]
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C%22SCRIPT_FORMAT_ERROR%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "SCRIPT_FORMAT_ERROR"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C%22TOKEN_NOT_VALID%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "TOKEN_NOT_VALID"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C%22NOT_OWNER%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "NOT_OWNER"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "ErrorResponse%3C%22BAD_CURRENT_PASSWORD%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "BAD_CURRENT_PASSWORD"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "Profile": {
      "type": "object",
      "properties": {
        "honor": {
          "type": "string",
          "description": "Honor. 头衔"
        },
        "honorPublic": {
          "type": "boolean",
          "description": "is honor visible to other users?"
        },
        "jobTitle": {
          "type": "string",
          "description": "Job Title. 职称"
        },
        "jobTitlePublic": {
          "type": "boolean",
          "description": "is job title visible to other users?"
        },
        "institution": {
          "type": "string",
          "description": "Institution"
        },
        "institutionPublic": {
          "type": "boolean",
          "description": "is institution visible to other users"
        },
        "academicKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Academic keywords. 学术关键词"
        },
        "researchLabels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Research Labels. 研究标签"
        }
      },
      "required": [
        "honor",
        "honorPublic",
        "jobTitle",
        "jobTitlePublic",
        "institution",
        "institutionPublic",
        "academicKeywords",
        "researchLabels"
      ],
      "additionalProperties": false
    },
    "Partial%3CProfile%3E": {
      "type": "object",
      "properties": {
        "honor": {
          "type": "string",
          "description": "Honor. 头衔"
        },
        "honorPublic": {
          "type": "boolean",
          "description": "is honor visible to other users?"
        },
        "jobTitle": {
          "type": "string",
          "description": "Job Title. 职称"
        },
        "jobTitlePublic": {
          "type": "boolean",
          "description": "is job title visible to other users?"
        },
        "institution": {
          "type": "string",
          "description": "Institution"
        },
        "institutionPublic": {
          "type": "boolean",
          "description": "is institution visible to other users"
        },
        "academicKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Academic keywords. 学术关键词"
        },
        "researchLabels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Research Labels. 研究标签"
        }
      },
      "additionalProperties": false
    },
    "DashboardArticleInfo": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cnTitle": {
          "type": "string",
          "description": "Chinese Title",
          "maxLength": 100
        },
        "cnKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        },
        "enTitle": {
          "type": "string",
          "description": "English Title",
          "maxLength": 100
        },
        "enKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Chinese Keywords"
        },
        "id": {
          "$ref": "#/definitions/ArticleId",
          "description": "The article id."
        },
        "createTime": {
          "type": "string",
          "description": "The time the article is first created."
        },
        "lastUpdatedTime": {
          "type": "string",
          "description": "Last updated time"
        },
        "revisionCount": {
          "type": "number",
          "description": "The number of revisions this article has."
        },
        "ownerSetPublicity": {
          "type": "boolean",
          "description": "Whether the article is public set by the author."
        },
        "adminSetPublicity": {
          "type": "boolean",
          "description": "Whether the article is public set by admin."
        },
        "retractTime": {
          "type": "string",
          "description": "the time the article is retracted, if retracted",
          "format": "date-time"
        }
      },
      "required": [
        "adminSetPublicity",
        "createTime",
        "id",
        "lastUpdatedTime",
        "ownerSetPublicity",
        "revisionCount"
      ],
      "description": "Get the articles this user is the owner of."
    },
    "ErrorResponse%3C%22EMAIL_ALREADY_EXISTS%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "EMAIL_ALREADY_EXISTS"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    },
    "NewAdminInfo": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "The password for the first admin."
        },
        "email": {
          "type": "string",
          "description": "The email for the first addmin.",
          "format": "email"
        }
      },
      "required": [
        "password",
        "email"
      ],
      "additionalProperties": false
    },
    "ErrorResponse%3C%22SYSTEM_ALREADY_SETUP%22%3E": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "const": "SYSTEM_ALREADY_SETUP"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "code"
      ],
      "additionalProperties": false,
      "description": "The response for all non-200 errors This structure aligns with fastify errors\n\nTCode is only for documentation."
    }
  }
}