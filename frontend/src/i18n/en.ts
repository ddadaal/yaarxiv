/* eslint-disable max-len */
export default {
  components: {
    fileUploader: {
      zoneLabel: "Drag and drop your file(s) here, or click to select the file(s).",
      "file-too-large" : "File is too large.",
      "file-too-small": "File is too small.",
      "too-many-files": "Too many files.",
      "file-invalid-type": "Invalid file type.",
    },
    tagInput: {
      placeholder: "Press Enter to add one item." ,
      commaToSplit: "Items splitted by comma will be added separately.",
    },
    requireAuth: {
      title: "Not Authorized",
      description: "You are not authorized to access this page. Please login as required user and try again.",
    },
    httpHandler: {
      tokenInvalid: "Your login session is expired or invalid. Please re-login.",
      serverError: "I am sorry that the request fails. Please retry or contact support.",
      networkError: "Network error. Please check your local network, or our network is down.",
    },
    errors: {
      notAuthorized: {
        title: "Not Authorized",
        description: "Login is required to access this page. Please login and retry.",
      },
      badRequest: {
        title: "Bad Request",
        description: "Your request is invalid. Please check your URL.",
      },
      forbidden: {
        title: "Forbiddden",
        description: "You can't access this page. Please login as required user and retry.",
      },
      notFound: {
        title: "404",
        description: "The resource you are trying to access does not exist.",
      },
      serverError: {
        title: "Server Error",
        description: "We are sorry that our server just got a problem. Please continue when it is fixed.",
      },
      localNetworkError: {
        title: "Network Error",
        description: "Please check your local network, or our network is down.",
      },
    },
    form: {
      validationError: {
        email: "Please input a valid email.",
        invalid: "Invalid",
        required: "Required",
        codeLink: "Please input repo link from {}",
      },
    },
    publicitySelect: {
      title: "Public",
      public: "Public",
      private: "Private",
    },
  },
  header: {
    home: "Home",
    search: "Search",
    upload: "Upload",
    about: "About",
    login: "Login",
    welcome: "Welcome, {}",
    logout: "Logout",
    dashboard: "Dashboard",
    admin: {
      articles: "Manage Articles",
      users: "Manage Users",
    },
  },
  login: {
    id: "Email",
    password: "Password",
    remember: "Remember",
    login: "Login",
    inProgress: "Logging In",
    register: "Register",
    invalid: "The email and password are invalid. Please check them and try again.",
    success: "Logged in successfully!",
    forget: "Forget Password",
  },
  forgetPassword: {
    title: "Forget password",
    email: "Email",
    sendRecoveryMail: "Send Password Reset Mail",
    accountNotExist: "Account does not exist.",
    sent: {
      title: "Password reset mail has been sent!",
      description: "Please check your mail for further instructions.",
    },
    reset: {
      error: {
        title: "Password reset link is invalid",
        description: "Please request password reset again.",
      },
      title: "Reset password",
      password: "New Password",
      confirm: "Confirm New Password",
      notMatch: "New password do not match!",
      submit: "Submit",
      reset: "Clear",
      complete: {
        title: "Password has been reset successfully.",
        description: "Click {} to login.",
        loginLink: "here",
      },
    },
  },
  register: {
    email: "Email",
    password: "Password",
    remember: "Remember",
    inProgress: "Registering",
    register: "Register",
    title: "Register",
    login: "Back to Login",
    conflict: "This email has been token by another account. Please change an email and try again.",
    success: "Registered successful!",
  },
  footer: {
    main: {
      language: "Select language",
      help: {
        title: "Help",
        about: "About",
        law: "Law",
      },
      contact: {
        title: "Contacts",
        qq: "QQ",
        email: "Email",
        projectGithub: "Project GitHub Repo",
      },
    },
    copyright: "All rights are reserved.",
  },

  pages: {
    upload: {
      pdf: {
        title: "1. Upload PDF",
        description: "Please upload your PDF first. The system will automatically fill some of the information based on your PDF. You can always change the information manually. File size limit: {} MB.",
        existing: "Click {} to download current PDF file",
        here: "here",
      },
      info: {
        title: "2. Fill Article Information",
        articleTitle: "Title (max chars: {})",
        authors: "Authors (max chars per item: {})",
        keywords: "Keywords (max chars per item: {}. Extra chars will be truncated.)",
        abstract: "Abstract (max chars: {})",
        codeLink: "Link to Code (Optional. Link to repos from {} are accepted.)",
        reset: "Reset",
        upload: "Upload",
      },
      complete: {
        title: "Upload successful！",
        description: "The ID for your article is {}。\nYour article will be reviewed shortly. \nWhen the review is passed, your article will be available publicly in our platform.\n\nThanks for your support to the platform.",
      },
    },
    article: {
      revisions: "Revisions",
      download: "Download",
    },
    search: {
      year: "Submit Year",
      keywords: "Includes Keywords",
      authors: "Includes Authors",
      item: {
        id: "Article ID",
        createTime: "Create Time",
        lastUpdateTime: "Last Update Time",
        revisionCount: "Revision Count",
        codeLink: "Link to Code",
      },
    },
    dashboard: {
      articles: {
        title: "Articles I Published",
        articleId: "Article ID",
        articleTitle: "Article Title",
        createTime: "Create Time",
        lastUpdatedTime: "Last Updated Time",
        revisionCount: "Revision Count",
        actions: "Actions",
        ownerSetPublicity: "Publicity by Owner",
        adminSetPublicity: "Publicity by Admin",
        update: "Update",
        delete: {
          button: "Withdraw",
          title: "Confirm to withdraw the article?",
          content: "Are you sure to withdraw the article {}? All your revisions will be removed from our platform.",
          confirm: "Confirm",
          cancel: "Cancel",
          success: "Article {} has been removed successfully!",
        },
      },
      profile: {
        title: "Profile",
        name: "Name",
        email: "Email",
        id: "User ID",
        confirm: "Change",
        confirming: "Changing...",
        reset: "Reset",
        success: "Profile updated successfully!",
        changePassword: {
          current: "Current password",
          changed: "New password",
          confirmChanged: "Confirm new password",
          changedNotMatch: "New passwords do not match!",
          confirm: "Change password",
          confirming: "Changing password...",
          reset: "Reset",
          wrongPassword: "Current password is not correct.",
          complete: "Password changed successfully!",
        },
      },
    },
    updateArticle: {
      success: "Article updated successfully. New revision number: {}.",
      loading: "Loading current revision of article {}...",
      forbidden: "You cannot update article {}.",
    },
    admin: {
      articles: {
        title: "Articles on the system",
        articleId: "Article ID",
        owner: "Owner",
        articleTitle: "Article Title",
        createTime: "Create Time",
        lastUpdatedTime: "Last Updated Time",
        revisionCount: "Revision Count",
        ownerSetPublicity: "Publicity by Owner",
        adminSetPublicity: "Publicity by Admin",
        actions: "Actions",
        delete: {
          button: "Withdraw",
          title: "Confirm to withdraw the article?",
          content: "Are you sure to withdraw the article {}? All your revisions will be removed from our platform.",
          confirm: "Confirm",
          cancel: "Cancel",
          success: "Article {} has been removed successfully!",
        },
      },
      users: {
        title: "Users on the system",
        userId: "User ID",
        name: "Name",
        email: "Email",
        role: {
          title: "Role",
          Admin: "Admin",
          User: "User",
        },
        articleCount: "Article Count",
        actions: "Actions",
        delete: {
          button: "Delete",
          title: "Confirm to delete user?",
          content: "Are you sure to delete the user {} (ID: {}) ? All related articles will be removed from system",
          confirm: "Confirm",
          cancel: "Cancel",
          success: "User {} (ID: {}) has been deleted successfully!",
        },
      },
    },
  },
};
