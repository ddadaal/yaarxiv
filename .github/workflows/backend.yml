name: Build and Publish backend

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - backend/**
      - api/**

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
        working-directory: backend
      
      - name: Start docker container for db testing
        run: npm run devenv
        working-directory: backend

      - name: Check running containers
        run: docker ps

      - name: Run tests with coverage
        run: npm run test:coverage
        working-directory: backend

      - name: Publish tests coverage result to coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: backend/coverage/lcov.info
          base-path: backend
          flag-name: Backend Integration

  publish-to-registry:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Aliyun Container Registry
        uses: aliyun/acr-login@v1
        with:
          region-id: cn-beijing
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: Login to Dockerhub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: backend/Dockerfile
          push: true
          tags: |
            registry.cn-beijing.aliyuncs.com/yaarxiv/backend:latest
            yaarxiv/backend:latest

  request-deployment:
    runs-on: ubuntu-latest
    needs: publish-to-registry
    steps:
      - uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.DEPLOY_AGENT_URL }}
          method: POST
          contentType: "text/plain"
          # data: '"backend"'
          customHeaders: '{"x-deploy-agent-key": "${{ secrets.DEPLOY_AGENT_KEY }}"}'
